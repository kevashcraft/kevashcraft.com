{% extends 'templates/master.twig' %}

{% set title = 'CentOS 7.4 Basic Configuration' %}

{% block content %}
<section>
  <h3><a href="/centos-7.4/basic-configuration" title="CentOS 7.4 Basic Configuration">CentOS 7.4 Basic Configuration</a></h3>
  <div class="flex">
    <div>
      <img src="/img/common/centos-logo.png">
    </div>
    <div class="stretch">
      <p>After installing CentOS there are a few basic configurations to make to ensure you've got basic security and easy  access. The first thing we'll do is <a href="#admin-user" title="useradd $username -G $username wheel">add an add an admin user</a> and <a href="#first-update" title="yum update && yum install vim wget rsync">update the system</a>, and then <a href="#ssh-access" title="/etc/ssh/sshd_config AllowUsers PasswordAuthentication">lockdown ssh access with a few settings</a> and a <a href="#firewall-rules" title="/etc/firewalld/zones/public.xml">firewall</a>, next we'll <a href="#selinux-status" title="getenforce  -  /etc/sysconfig/selinux">check on SELinux</a>, <a href="#network-status" title="ip a  -  /etc/sysconfig/network-scripts/ifcg*">check on the network</a>, <a href="#hostname-dns" title="/etc/hostname  -  /etc/resolv.conf">set the hostname and dns</a>, and then <a href="#motd-message" title="/etc/motd  -  /etc/motd.sh">add a login message of the day</a>. There will also be some useful <a href="#keyboard-shortcuts" title="ctrl+r  -  ctrl+shift+c/v  -  ctrl+l  -  ctrl+d">keyboard shortcuts</a> and <a href="#useful-commands" title="wall  -  w  -  netstat  -  ps aux  -  grep  -  cat  -  head  -  tail">commands</a>.</p>
    </div>
  </div>
  <div class="indent">
    <h5>Configuration Steps</h5>
    <ul>
      <li><a href="#admin-user" title="useradd $username -G $username wheel">Add an Admin User</a></li>
      <li><a href="#first-update" title="yum update && yum install vim wget rsync">Update the System</a></li>
      <li><a href="#ssh-access" title="/etc/ssh/sshd_config AllowUsers PasswordAuthentication">Lockdown SSH Access</a></li>
      <li><a href="#firewall-rules" title="/etc/firewalld/zones/public.xml">Add Firewall Rules</a></li>
      <li><a href="#selinux-status" title="getenforce  -  /etc/sysconfig/selinux">Check SELinux Status</a></li>
      <li><a href="#network-status" title="ip a  -  /etc/sysconfig/network-scripts/ifcg*">Check Network Status</a></li>
      <li><a href="#hostname-dns" title="/etc/hostname  -  /etc/resolv.conf">Set Hostname and DNS</a></li>
      <li><a href="#motd-message" title="/etc/motd  -  /etc/motd.sh">Add a Message of the Day</a></li>
    </ul>
  </div>
  <div class="indent">
    <h5>Bonus Steps</h5>
    <ul>
      <li><a href="#keyboard-shortcuts" title="ctrl+r  -  ctrl+shift+c/v  -  ctrl+l  -  ctrl+d">Keyboard Shortcuts</a></li>
      <li><a href="#useful-commands" title="wall  -  w  -  netstat  -  ps aux  -  grep  -  cat  -  head  -  tail">Useful Commands</a></li>
    </ul>
  </div>
  <div class="indent">
    <h5>Useful Notes</h5>
    <ul>
      <li>add 'sudo' before a command if escalated privileges are required</li>
    </ul>
  </div>
</section>
<section id="admin-user">
  <h4><a href="#admin-user">Add an Admin User</a></h4>
  <div class="code sudo">useradd $username -G $username wheel</div>
  <p>You can add an admin user (a user with sudo access) by adding a user to the <i>wheel</i> group. To add a new user and add them to the <i>wheel</i> group, include the <span class="command">-G</span> flag when you run <span class="code">adduser</span>.</p>
  <p>To add an existing user to the <i>wheel</i> group run <span class="command">usermod -a -G wheel $username</span>.</p>
  <p><img class="symbol" src="/img/common/warning.png"> The name of the privileged group can be set with the<span class="command">visudo</span> command, which saves the configuration (after it checks to make sure nothing is broken) to <span class="filepath">/etc/sudoers</span>. <strong>Do not edit this file</strong> manually as it can break <span class="command">sudo</span> and lock you out. The line you're looking for is <span class="snippet">%wheel   ALL=(ALL:ALL) ALL</span>, which grants the <i>wheel</i> group access to ALL.</p>
  <p>Adding an admin user is an important security point to ensure your permissions are set from the beginning and you're not just going around and rooting into everything.</p>
</section>
<section id="first-update">
  <h4><a href="#first-update">Update the System</a></h4>
  <div class="code sudo">yum update && yum install vim wget rsync</div>
  <p>You can update the system by running <span class="command">yum update</span> and you can install software packages with the <span class="command">yum install $packages</span> command. Above we added the <span class="snippet">&&</span> between the two commands so one is ran after the other. You could also add the <span class="snippet">-y</span> flag to automatically accept the questions and do everything at once.</p>
</section>
<section id="ssh-access">
  <h4><a href="#ssh-access">Lockdown SSH Access</a></h4>
  <div class="code sudo">vim /etc/ssh/sshd_config</div>
  <div class="snippet">
    AllowUsers $usernames
    PasswordAuthentication no
  </div>
  <p>Two of the most important steps in securing SSH access are restricting which users are allowed to login and requiring those with access to use keyfiles. To only allow specific users to have SSH access add/edit the <span class="snippet">AllowUsers</span> line with a list of users (separated by spaces). Requiring a keyfile to login is done by disabling <span class="snippet">PasswordAuthentication</span>.</p>
</section>
<section id="firewall-rules">
  <h4><a href="#firewall-rules">Add Firewall Rules</a></h4>
  <div class="code sudo">vim /etc/firewalld/zones/public.xml</div>
  <div class="snippet">
    &lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;zone>
  &lt;short>Public&lt;/short>
  ## add a port for a service
  # &lt;service name="$service"/&gt;
  ## add a port and protocol
  # &lt;port port="$port" protocol="$protocol"/&gt;

  # listen to only your ip address for ssh access
  &lt;rule family="ipv4"&gt;
    &lt;source address="$your_current_ip_address"/&gt;
    &lt;service name="ssh"/&gt;
    &lt;accept /&gt;
  &lt;/rule&gt;
&lt;/zone&gt;
</div>
  <p>The firewall (iptables) are configured with the <i>firewalld</i> service. It can be updated with the <span class="command">firewall-cmd</span> command or via the zone files (like above).</p>
  <p>To make sure the service is running and enabled: <span class="command">systemctl {start,enable} firewalld</span></p>
  <p>To temporarily open up a port: <span class="command">firewall-cmd --add-port=$port/$protocol</span></p>
  <p>FirewallD is just one of the many ways to configure <i>iptables</i> which controls the traffic rules. You can see all of the rules in effect by running <span class="command">iptables -L</span>.</p>
</section>
<section id="selinux-status">
  <h4><a href="#selinux-status">Check SELinux Status</a></h4>
  <div class="code sudo">getenforce</div>
  <div class="code sudo">setenforce</div>
  <div class="code sudo">vim /etc/sysconfig/selinux</div>
  <div class="snippet">
  # enforcing or permissive
  SELINUX=enforcing
  SELINUXTYPE=targeted
  </div>
  <p>SELinux stands for Security Enhanced Linux and further locks down a system, restricting file and network access based on specific policies in addition to the standard filesystem permissions. You can check if SELinux is currently enforicing policies by running the <span class="command">getenforce</span> command, and to temporarily enable/disable SELinux run <span class="command">setenforce 1/0</span>. To make permanent changes edit the <span class="filepath">/etc/sysconfig/selinux</span> file, setting <span class="snippet">SELINUX</span> to enforcing or permissive..</p>
  <p>SELinux is enabled by default on CentOS and is a good idea/challenge to keep it on, however just remember <strong class="light">if you're encountering a permission problem, it's most likely SELinux to blame.</strong></p>
</section>
<section id="network-status">
  <h4><a href="#network-status">Check Network Status</a></h4>
  <div class="code user">ip a</div>
  <div class="code sudo">vim /etc/sysconfig/network-scripts/ifcfg-$eth_device</div>
  <div class="snippet">
  ## add for bridge
  # DEVICE="br0"
  # TYPE=Bridge
  # DELAY=0

  ## turn onboot to yes to start the card on system boot
  ONBOOT="yes"
  ## set bootproto to dhcp/static/none (for bridge)
  BOOTPROTO=static
  IPADDR=10.0.0.2
  PREFIX=24
  GATEWAY=10.0.0.1
  DNS1=8.8.8.8
  DNS2=8.8.4.4

  ## Assigns the device to a bridge
  # BRIDGE=br0
  </div>
  <p>The network addresses can be found with the <span class="command">ip a</span> command and the device settings can be edited in the <span class="filepath"><div class="code sudo">/etc/sysconfig/network-scripts/ifcfg-$eth_device</span> file.</p>
  <p>Changing the <span class="snippet">BOOTPROTO</span> to dhcp/static will control the address assignment.</p>
  <p>Creating a <span class="filepath">ifcfg-br0</span> file with the above lines changed will create a bridge device (useful for kvm).</p>
</section>
<section id="hostname-dns">
  <h4><a href="#hostname-dns">Set Hostname and DNS</a></h4>
  <div class="code user">hostname $hostname</div>
  <div class="code user">vim /etc/hostname</div>
  <div class="code sudo">vim /etc/resolv.conf</div>
  <div class="snippet">
  nameserver 8.8.8.8
  nameserver 8.8.4.4
  </div>
  <p>The system's hostname can be temporarily changed with the <span class="command">hostname</span> command and permanently changed by editing the <span class="filepath">/etc/hostname</span> file with the new name.</p>
  <p>You can set the nameservers in the <span class="filepath">/etc/resolv.conf</span> file.</p>
</section>
<section id="motd-message">
  <h4><a href="#motd-message">Add a Message of the Day</a></h4>
  <div class="code user">vim /etc/motd</div>
  <div class="snippet">
  ____           _    ___  ____    _____
 / ___|___ _ __ | |_ / _ \/ ___|  |___  |
| |   / _ \ '_ \| __| | | \___ \     / /
| |__|  __/ | | | |_| |_| |___) |   / /
 \____\___|_| |_|\__|\___/|____/   /_/
                                           
  </div>
  <p>If you want to see a message whenever you login add it to the <span class="filepath">/etc/motd</span> file. This is a good place to add that timeless ascii art you've been saving.</p>
</section>
<section id="keyboard-shortcuts">
  <h4><a href="#keyboard-shortcuts">Keyboard Shortcuts</a></h4>
  <div class="code">ctrl+r <span>Command Line Search</span></div>
  <div class="code">ctrl+shift+c/ctrl+shift+v <span>copy/paste in a gui terminal</span></div>
  <div class="code">ctrl+l <span>clear the Screen</span></div>
  <div class="code">ctrl+d <span>logout</span></div>
</section>
<section id="useful-commands">
  <h4><a href="#useful-commands">Useful Commands</a></h4>
  <div class="code">w <span>show who all is logged in</span></div>
  <div class="code">wall <span>send a command-line message to all logged-in users</span></div>
  <div class="code">netstat -tulpn <span>list currently active service ports</span></div>
  <div class="code">ps aux | grep $process<span>show all running processes and search output</span></div>
  <div class="code">cat $filename<span>display the contents of a file</span></div>
  <div class="code">head $filename -n 50<span>display the first 50 lines of a file</span></div>
  <div class="code">tail $filename -n 40<span>display the last 40 lines of a file</span></div>
  <div class="code">find . -iname '*$filename'<span>searches the current directory (and subdirs) for a file</span></div>
</section>
{% endblock %}
